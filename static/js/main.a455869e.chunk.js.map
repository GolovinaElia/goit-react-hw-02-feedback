{"version":3,"sources":["components/Statistics/Statistics.module.css","components/Notification/Notification.module.css","components/Notification/Notification.jsx","components/Statistics/Statistics.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Section/Section.jsx","App.js","index.js","components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.module.css"],"names":["module","exports","Notification","message","className","styles","notificate","Statistics","good","neutral","bad","total","positivePercentage","style","statistics","title","statList","positiveFeedback","FeedbackOption","options","onLeaveFeedback","feedbackList","map","btn","feedbackItem","button","type","name","onClick","Section","children","section","App","state","handleIncrement","event","target","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","FeedbackOptions","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,SAAW,+B,mBCA7BD,EAAOC,QAAU,CAAC,WAAa,mC,6KCUhBC,EARM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACnB,mBAAGC,UAAWC,IAAOC,WAArB,SAAkCH,KC2BrBI,EA3BI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,sBAAKR,UAAWS,IAAMC,WAAtB,UACE,oBAAIV,UAAWS,IAAME,MAArB,wBACW,IAAVJ,EACC,cAAC,EAAD,CAAeR,QAAQ,sBAEvB,qBAAIC,UAAWS,IAAMG,SAArB,UACE,qBAAIZ,UAAWS,IAAML,KAArB,mBAAkCA,KAClC,qBAAIJ,UAAWS,IAAMJ,QAArB,sBAAwCA,KACxC,qBAAIL,UAAWS,IAAMH,IAArB,kBAAgCA,KAChC,qBAAIN,UAAWS,IAAMF,MAArB,oBAAoCA,KACpC,qBAAIP,UAAWS,IAAMI,iBAArB,gCACsBL,EADtB,c,gBCUOM,EAtBQ,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,gBAAZ,OACrB,oBAAIhB,UAAWS,IAAMQ,aAArB,SACGF,EAAQG,KAAI,SAAAC,GAAG,OACd,oBAAcnB,UAAWS,IAAMW,aAA/B,SACE,wBACEpB,UAAWS,IAAMY,OACjBC,KAAK,SACLC,KAAMJ,EACNK,QAASR,EAJX,SAMGG,KAPIA,S,gBCSAM,EAZC,SAAC,GAAD,IAAGd,EAAH,EAAGA,MAAOe,EAAV,EAAUA,SAAV,OACd,sBAAK1B,UAAWS,IAAMkB,QAAtB,UACE,oBAAI3B,UAAWS,IAAME,MAArB,SAA6BA,IAC5Be,MCkDUE,E,4MAlDbC,MAAQ,CACNzB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPwB,gBAAkB,SAAAC,GAChB,IAAMR,EAAOQ,EAAMC,OAAOT,KAC1B,EAAKU,UAAS,SAAAC,GAAS,sBACpBX,EAAOW,EAAUX,GAAQ,O,EAI9BY,mBAAqB,WACnB,MAA+B,EAAKN,MAEpC,OAFA,EAAQzB,KAAR,EAAcC,QAAd,EAAuBC,K,EAKzB8B,gCAAkC,WAChC,IAAQhC,EAAS,EAAKyB,MAAdzB,KACFG,EAAQ,EAAK4B,qBAEnB,OAD2BE,KAAKC,MAAc,IAAPlC,EAAcG,I,4CAIvD,WACE,MAA+BgC,KAAKV,MAA5BzB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjBC,EAAQgC,KAAKJ,qBACb3B,EAAqB+B,KAAKH,kCAEhC,OACE,eAAC,EAAD,CAASzB,MAAM,wBAAf,UACE,cAAC6B,EAAD,CACEzB,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBAAiBuB,KAAKT,kBAGxB,cAAC,EAAD,CACE1B,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,W,GA5CZiC,a,YCElBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCV1BlD,EAAOC,QAAU,CAAC,aAAe,sCAAsC,aAAe,sCAAsC,OAAS,kC,kBCArID,EAAOC,QAAU,CAAC,QAAU,4B","file":"static/js/main.a455869e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"statList\":\"Statistics_statList__3hPce\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notificate\":\"Notification_notificate__Lfh02\"};","import PropTypes from 'prop-types';\nimport styles from './Notification.module.css';\n\nconst Notification = ({ message }) => (\n  <p className={styles.notificate}>{message}</p>\n);\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import PropTypes from 'prop-types';\nimport style from './Statistics.module.css';\nimport Notifications from '../Notification/Notification';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\n  <div className={style.statistics}>\n    <h2 className={style.title}>Statistics</h2>\n    {total === 0 ? (\n      <Notifications message=\"No feedback given\" />\n    ) : (\n      <ul className={style.statList}>\n        <li className={style.good}>Good: {good}</li>\n        <li className={style.neutral}>Neutral: {neutral}</li>\n        <li className={style.bad}>Bad: {bad}</li>\n        <li className={style.total}>Total: {total}</li>\n        <li className={style.positiveFeedback}>\n          Positive feedback: {positivePercentage}%\n        </li>\n      </ul>\n    )}\n  </div>\n);\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import PropTypes from 'prop-types';\nimport style from './FeedbackOptions.module.css';\n\nconst FeedbackOption = ({ options, onLeaveFeedback }) => (\n  <ul className={style.feedbackList}>\n    {options.map(btn => (\n      <li key={btn} className={style.feedbackItem}>\n        <button\n          className={style.button}\n          type=\"button\"\n          name={btn}\n          onClick={onLeaveFeedback}\n        >\n          {btn}\n        </button>\n      </li>\n    ))}\n  </ul>\n);\n\nFeedbackOption.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOption;\n","import PropTypes from 'prop-types';\nimport style from './Section.module.css';\n\nconst Section = ({ title, children }) => (\n  <div className={style.section}>\n    <h2 className={style.title}>{title}</h2>\n    {children}\n  </div>\n);\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Section;\n","import React, { Component } from 'react';\nimport Statistics from './components/Statistics/Statistics';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Section from './components/Section/Section';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleIncrement = event => {\n    const name = event.target.name;\n    this.setState(prevState => ({\n      [name]: prevState[name] + 1,\n    }));\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    const total = good + neutral + bad;\n    return total;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const { good } = this.state;\n    const total = this.countTotalFeedback();\n    const positivePercentage = Math.round((good * 100) / total);\n    return positivePercentage;\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const total = this.countTotalFeedback();\n    const positivePercentage = this.countPositiveFeedbackPercentage();\n\n    return (\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions\n          options={['good', 'neutral', 'bad']}\n          onLeaveFeedback={this.handleIncrement}\n        />\n\n        <Statistics\n          good={good}\n          neutral={neutral}\n          bad={bad}\n          total={total}\n          positivePercentage={positivePercentage}\n        />\n      </Section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\nimport './App.module.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedbackList\":\"FeedbackOptions_feedbackList__3_448\",\"feedbackItem\":\"FeedbackOptions_feedbackItem__1TkHv\",\"button\":\"FeedbackOptions_button__2yqu1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__3SuTK\"};"],"sourceRoot":""}